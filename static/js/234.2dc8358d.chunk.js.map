{"version":3,"file":"static/js/234.2dc8358d.chunk.js","mappings":"uOAEO,MAAMA,EAAOC,EAAAA,GAAOC,GAAEC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oCAIhBC,EAAOJ,EAAAA,GAAOK,EAACC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,2E,aCA5B,MAgDA,EAhDaI,KACX,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,MACbC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,KAC9BC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,GAqBvC,OAnBAG,EAAAA,EAAAA,YAAU,KAEND,GAAW,IAEXE,EAAAA,EAAAA,IAAYR,GACTS,MAAKP,IACJC,EAAUD,EAAO,IAElBQ,OAAMC,IACLC,QAAQC,IAAIF,EAAM,IAEnBG,SAAQ,KACPR,GAAW,EAAM,GAIN,GAChB,CAACN,KAGFe,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACGX,IAAWY,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KAEnBD,EAAAA,EAAAA,KAAC1B,EAAI,CAAAyB,SACFd,EAAOiB,KAAIC,IAAA,IAAC,GAAEC,EAAE,aAAEC,EAAY,cAAEC,EAAa,KAAEC,EAAI,UAAEC,GAAWL,EAAA,OAC/DL,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OACES,MAAM,QACNC,IACEL,EAAY,kCAAAM,OAC0BN,GAAY,6EAGpDO,IAAKN,KAEPN,EAAAA,EAAAA,KAACrB,EAAI,CAAAoB,SAAEQ,KACPT,EAAAA,EAAAA,MAACnB,EAAI,CAAAoB,SAAA,CAAC,cAAYS,OAXXJ,EAYJ,QAGL,C,0ECjDVS,EAAAA,EAAMC,SAASC,QAAU,gCAEzB,MAAMC,EAAU,mCAEHC,EAAgBC,gBACJL,EAAAA,EAAMM,IAAI,8BAADR,OAA+BK,KAC/CI,KAAKC,QAGVC,EAAuBJ,gBACXL,EAAAA,EAAMM,IAAI,wBAADR,OACNK,EAAO,qDAAAL,OAAoDY,KAErEH,KAAKC,QAGVG,EAAoBN,gBACRL,EAAAA,EAAMM,IAAI,SAADR,OACrB5B,EAAO,aAAA4B,OAAYK,EAAO,qBAErBI,KAGL7B,EAAc2B,gBACFL,EAAAA,EAAMM,IAAI,SAADR,OACrB5B,EAAO,qBAAA4B,OAAoBK,EAAO,qBAE7BI,KAAKK,I","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/tmbdApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style-type: none;\n`;\n\nexport const Text = styled.p`\n  font-weight: 600;\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchActors } from 'services/tmbdApi';\nimport Loader from 'components/Loader/Loader';\nimport { List, Text } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const onActorsOfMovie = () => {\n      setLoading(true);\n\n      fetchActors(movieId)\n        .then(actors => {\n          setActors(actors);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n\n    onActorsOfMovie();\n  }, [movieId]);\n\n  return (\n    <div>\n      {loading && <Loader />}\n\n      <List>\n        {actors.map(({ id, profile_path, original_name, name, character }) => (\n          <li key={id}>\n            <img\n              width=\"200px\"\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                  : `https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg`\n              }\n              alt={original_name}\n            />\n            <Text>{name}</Text>\n            <Text>Character: {character}</Text>\n          </li>\n        ))}\n      </List>\n    </div>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '992758a4802a699e8df27d4d6efc34fb';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSearchByKeyword = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["List","styled","ul","_templateObject","_taggedTemplateLiteral","Text","p","_templateObject2","Cast","movieId","useParams","actors","setActors","useState","loading","setLoading","useEffect","fetchActors","then","catch","error","console","log","finally","_jsxs","children","_jsx","Loader","map","_ref","id","profile_path","original_name","name","character","width","src","concat","alt","axios","defaults","baseURL","API_KEY","fetchTrending","async","get","data","results","fetchSearchByKeyword","keyword","fetchMovieDetails","cast"],"sourceRoot":""}