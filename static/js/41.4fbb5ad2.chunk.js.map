{"version":3,"file":"static/js/41.4fbb5ad2.chunk.js","mappings":"0MAGO,MAAMA,EAAOC,EAAAA,GAAOC,GAAEC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oCAIhBC,EAAOJ,EAAAA,GAAOK,GAAEC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,2EAMhBI,GAAYP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAYS,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,+F,aCVrC,MAgBA,EAhBmBO,IAAgB,IAAf,MAAEC,GAAOD,EAC3B,MAAME,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAACf,EAAI,CAAAgB,SACFJ,EAAMK,KAAIC,IACTH,EAAAA,EAAAA,KAACV,EAAI,CAAAW,UACHD,EAAAA,EAAAA,KAACP,EAAS,CAACW,GAAE,WAAAC,OAAaF,EAAKG,IAAMC,MAAO,CAAEC,KAAMV,GAAWG,SAC5DE,EAAKM,SAFCN,EAAKG,OAMb,C,mGCbJ,MAAMI,EAAaxB,EAAAA,GAAOyB,KAAIvB,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oDAKxBuB,EAAQ1B,EAAAA,GAAO2B,MAAKrB,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,gTAkBpByB,EAAS5B,EAAAA,GAAO6B,OAAMpB,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,0R,aCtBnC,MA0BA,EA1BaO,IAAuB,IAAtB,aAAEoB,GAAcpB,EAC5B,MAAOqB,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,IAWnC,OACEC,EAAAA,EAAAA,MAACV,EAAU,CAACW,SANOC,IACnBA,EAAMC,iBACNP,EAAaC,EAAMO,cAAc,EAIEvB,SAAA,EACjCD,EAAAA,EAAAA,KAACY,EAAK,CACJa,KAAK,OACLC,KAAK,QACLC,WAAS,EACTC,MAAOX,EACPY,SAhBoBP,IACxBJ,EAASI,EAAMQ,OAAOF,MAAM,KAiB1B5B,EAAAA,EAAAA,KAACc,EAAM,CAACW,KAAK,SAAQxB,SAAC,aACX,E,aCnBjB,MAiCA,EAjCe8B,KACb,MAAOC,EAAaC,IAAkBd,EAAAA,EAAAA,UAAS,KACxCe,EAASC,IAAchB,EAAAA,EAAAA,WAAS,IAChCiB,EAAcC,IAAmBlB,EAAAA,EAAAA,WAAS,GAkBjD,OACEC,EAAAA,EAAAA,MAAA,QAAAnB,SAAA,EACED,EAAAA,EAAAA,KAACsC,EAAI,CAACtB,aAlBWuB,IACnBJ,GAAW,IAEXK,EAAAA,EAAAA,IAAqBD,GAClBE,MAAKC,IACJT,EAAeS,GACfL,EAAyC,IAAzBK,EAAcC,OAAa,IAE5CC,OAAMC,IACLC,QAAQC,IAAIF,EAAM,IAEnBG,SAAQ,KACPb,GAAW,EAAM,GACjB,IAMDD,IAAWlC,EAAAA,EAAAA,KAACiD,EAAAA,EAAM,IAClBb,IACCpC,EAAAA,EAAAA,KAAA,KAAAC,SAAG,4DAEJ+B,IAAehC,EAAAA,EAAAA,KAACkD,EAAAA,EAAU,CAACrD,MAAOmC,MAC9B,C,0ECjCXmB,EAAAA,EAAMC,SAASC,QAAU,gCAEzB,MAAMC,EAAU,mCAEHC,EAAgBC,gBACJL,EAAAA,EAAMM,IAAI,8BAADpD,OAA+BiD,KAC/CI,KAAKC,QAGVnB,EAAuBgB,gBACXL,EAAAA,EAAMM,IAAI,wBAADpD,OACNiD,EAAO,qDAAAjD,OAAoDuD,KAErEF,KAAKC,QAGVE,EAAoBL,gBACRL,EAAAA,EAAMM,IAAI,SAADpD,OACrByD,EAAO,aAAAzD,OAAYiD,EAAO,qBAErBI,KAGLK,EAAcP,gBACFL,EAAAA,EAAMM,IAAI,SAADpD,OACrByD,EAAO,qBAAAzD,OAAoBiD,EAAO,qBAE7BI,KAAKM,I","sources":["pages/EditorList/EditorList.styled.jsx","pages/EditorList/EditorList.jsx","components/Form/Form.styled.jsx","components/Form/Form.jsx","pages/Movies/Movies.jsx","services/tmbdApi.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style-type: none;\n`;\n\nexport const Item = styled.li`\n  font-weight: 600;\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: #191d1e;\n\n  &:hover {\n    color: tomato;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { List, Item, MovieLink } from './EditorList.styled';\n\nconst EditorList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {films.map(film => (\n        <Item key={film.id}>\n          <MovieLink to={`/movies/${film.id}`} state={{ from: location }}>\n            {film.title}\n          </MovieLink>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default EditorList;\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Input = styled.input`\n  padding: 12px 14px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 4px;\n  border: 3px solid #191d1e;\n  font-weight: 600;\n  font-size: 20px;\n  margin-right: 10px;\n  border-radius: 4px 8px;\n  outline: none;\n\n  &:hover {\n    color: tomato;\n    border: 3px solid tomato;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 12px 12px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 4px;\n  border: 3px solid #191d1e;\n  color: #191d1e;\n  font-weight: 600;\n  font-size: 20px;\n  border-radius: 4px 8px;\n\n  &:hover {\n    color: tomato;\n    border: 3px solid tomato;\n  }\n`;\n","import { useState } from 'react';\nimport { SearchForm, Input, Button } from './Form.styled';\n\nconst Form = ({ searchMovies }) => {\n  const [query, setQuery] = useState('');\n\n  const handleInputChange = event => {\n    setQuery(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    searchMovies(query.toLowerCase());\n  };\n\n  return (\n    <SearchForm onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        name=\"query\"\n        autoFocus\n        value={query}\n        onChange={handleInputChange}\n      />\n      <Button type=\"submit\">Search</Button>\n    </SearchForm>\n  );\n};\n\nexport default Form;\n","import { useState } from 'react';\nimport Loader from 'components/Loader/Loader';\nimport EditorList from 'pages/EditorList/EditorList';\nimport Form from 'components/Form/Form';\nimport { fetchSearchByKeyword } from 'services/tmbdApi';\n\nconst Movies = () => {\n  const [searchFilms, setSearchFilms] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [noMoviesText, setNoMoviesText] = useState(false);\n\n  const searchMovies = queryMovie => {\n    setLoading(true);\n\n    fetchSearchByKeyword(queryMovie)\n      .then(searchResults => {\n        setSearchFilms(searchResults);\n        setNoMoviesText(searchResults.length === 0);\n      })\n      .catch(error => {\n        console.log(error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <main>\n      <Form searchMovies={searchMovies} />\n      {loading && <Loader />}\n      {noMoviesText && (\n        <p>There is no movies with this request. Please, try again</p>\n      )}\n      {searchFilms && <EditorList films={searchFilms} />}\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '992758a4802a699e8df27d4d6efc34fb';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSearchByKeyword = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["List","styled","ul","_templateObject","_taggedTemplateLiteral","Item","li","_templateObject2","MovieLink","Link","_templateObject3","_ref","films","location","useLocation","_jsx","children","map","film","to","concat","id","state","from","title","SearchForm","form","Input","input","Button","button","searchMovies","query","setQuery","useState","_jsxs","onSubmit","event","preventDefault","toLowerCase","type","name","autoFocus","value","onChange","target","Movies","searchFilms","setSearchFilms","loading","setLoading","noMoviesText","setNoMoviesText","Form","queryMovie","fetchSearchByKeyword","then","searchResults","length","catch","error","console","log","finally","Loader","EditorList","axios","defaults","baseURL","API_KEY","fetchTrending","async","get","data","results","keyword","fetchMovieDetails","movieId","fetchActors","cast"],"sourceRoot":""}